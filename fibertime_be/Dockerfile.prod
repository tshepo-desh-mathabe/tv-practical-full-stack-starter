# Stage 1: Build the application
FROM node:20-alpine3.20 AS builder

WORKDIR /app

# Update package index and install build tools
RUN apk update && apk add --no-cache \
    python3 \
    py3-pip \
    make \
    g++

# Copy package files first to leverage Docker cache
COPY package*.json ./

# Install dependencies (including devDependencies for build)
RUN npm ci

# Copy all source files
COPY . .

# Build the application
RUN npm run build

# Stage 2: Production image
FROM node:20-alpine3.20

WORKDIR /app

# Update package index and install Python, build tools, and curl
RUN apk update && apk add --no-cache \
    python3 \
    py3-pip \
    make \
    g++ \
    curl

# Copy package files again
COPY package*.json ./

# Install only production dependencies
RUN npm ci --omit=dev

# Copy built files from builder stage
COPY --from=builder /app/dist ./dist

# Copy necessary production files
COPY --from=builder /app/package.json ./
COPY --from=builder /app/.env.production ./.env

# Expose the port
EXPOSE 5588

# Run the application
CMD ["npm", "run", "start:prod"]